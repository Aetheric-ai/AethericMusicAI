name: test

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

env:
  POETRY_VERSION: "1.4.2"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: "snok/install-poetry@v1"
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: "1.4.2"
          install-command: 
              echo "Running core tests, installing dependencies with poetry..."
              poetry install
              pip install pytest
      - name: Run core tests
        run: pytest
        shell: bash
      - name: Python ${{ matrix.python-version }} core
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: "actions/setup-python@v2"
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: "1.4.2"
          install-command: |
              echo "Running core tests, installing dependencies with poetry..."
              poetry install
              pip install pytest
      - name: Run core tests
        run: pytest
        shell: bash

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    name: Python ${{ matrix.python-version }} core
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: "actions/setup-python@v2"
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: "1.4.2"
          install-command: |
              echo "Running core tests, installing dependencies with poetry..."
              poetry install
      - name: Run core tests
        run: pytest
        shell: bash